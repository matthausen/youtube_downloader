{"version":3,"sources":["components/List/index.jsx","components/SearchBar/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","actions","display","justifyContent","alignItems","padding","spacing","duration","float","chips","flexWrap","margin","whitechapelColor","color","chip","clearAllIcon","fontSize","downlaodIcon","listItem","minWidth","songCard","thumbnail","TracksList","tracks","classes","useState","checked","setChecked","ready","setReady","loading","setLoading","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleDownload","songId","axios","post","headers","Accept","then","res","status","console","log","Container","maxWidth","CircularProgress","className","Typography","variant","component","href","length","Box","map","song","Chip","avatar","Avatar","alt","src","thumbnails","label","title","onDelete","handleDeleteFromList","Tooltip","aria-label","onClick","id","videos","List","labelId","Paper","elevation","ListItem","role","undefined","dense","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","primary","ListItemSecondaryAction","IconButton","input","marginLeft","flex","iconButton","divider","height","SearchBar","track","setTrack","results","setResults","p","onSubmit","e","preventDefault","data","InputBase","autoFocus","onChange","target","placeholder","type","Divider","orientation","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb8d90ab.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Container, Box, Chip, Paper, Avatar, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Typography,\n  Checkbox, IconButton, Tooltip, CircularProgress\n} from '@material-ui/core';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport SyncIcon from '@material-ui/icons/Sync';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  actions: {\n    display: 'flex',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: theme.spacing(4),\n  },\n  duration: {\n    '& > span': {\n      float: 'right'\n    }\n  },\n  chips: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n  whitechapelColor: {\n    color: '#ff5252'\n  },\n  chip: {\n    backgroundColor: '#ff5252',\n    color: '#ffffff'\n  },\n  clearAllIcon: {\n    margin: 10,\n    fontSize: \"2rem\",\n    color: '#ff5252'\n  },\n  downlaodIcon: {\n    margin: 10,\n    fontSize: '2em',\n    color: '#ff5252'\n  },\n  listItem: {\n    minWidth: 0\n  },\n  songCard: {\n    margin: 10,\n    padding: 10\n  },\n  thumbnail: {\n    margin: '0 10px'\n  }\n}));\n\nexport default function TracksList({ tracks }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState([]);\n  const [ready, setReady] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleDownload = songId => {\n    setLoading(true);\n    axios.post(`/api/download-songs`, songId, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        console.log(`The response: ${res}`);\n        setLoading(false);\n        setReady(true);\n      }\n    });\n  }\n\n  const handleDeleteFromList = song => {\n    const currentIndex = checked.indexOf(song);\n    const newChecked = [...checked];\n    newChecked.splice(currentIndex, 1);\n    setChecked(newChecked);\n  }\n\n  const handleClearAll = () => setChecked([]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      {loading && (\n        <>\n          <CircularProgress className={classes.whitechapelColor} />\n          <Typography variant=\"body1\" component=\"p\">Converting to mp3...please wait</Typography>\n        </>\n      )}\n      {ready && <a href={`/api/download-zip`}>Download as .zip</a>}\n      {checked && checked.length > 0 ?\n        (\n          <Box>\n            <div className={classes.chips}>\n              {checked.map(song =>\n                <Chip\n                  avatar={<Avatar alt=\"Song\" src={song.thumbnails[0]} />}\n                  label={song.title}\n                  onDelete={() => handleDeleteFromList(song)}\n                  className={classes.chip}\n                />\n              )}\n            </div>\n            <div className={classes.actions}>\n              <Tooltip title=\"Download All\" aria-label=\"download-all\">\n                <SyncIcon className={classes.downlaodIcon} color=\"secondary\" onClick={() => handleDownload(checked.map(song => song.id))} />\n              </Tooltip>\n              <Tooltip title=\"Clear All\" aria-label=\"clear-all\">\n                <ClearAllIcon className={classes.clearAllIcon} color=\"secondary\" onClick={handleClearAll} />\n              </Tooltip>\n            </div>\n          </Box>\n        ) : null\n      }\n      {tracks.videos.length > 0 ? (\n        <List className={classes.root}>\n          {tracks.videos.map(value => {\n\n            const { id, title, thumbnails, duration } = value;\n            const labelId = `checkbox-list-label-${title}`;\n\n            return (\n              <Paper className={classes.songCard} elevation={3}>\n                <ListItem key={id} role={undefined} dense button onClick={handleToggle(value)}>\n                  <ListItemIcon className={classes.listItem}>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checked.indexOf(value) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                      inputProps={{ 'aria-labelledby': labelId }}\n                    />\n                  </ListItemIcon>\n                  <Avatar className={classes.thumbnail} alt=\"thumbnail\" src={thumbnails[0]} />\n                  <ListItemText id={labelId} primary={`${title}`} />\n                  <ListItemText className={classes.duration} id={labelId} primary={`min ${duration}`} />\n                  <ListItemSecondaryAction>\n                    <Tooltip title=\"Convert song to mp3\" aria-label=\"convert-song\">\n                      <IconButton edge=\"end\" aria-label=\"comments\">\n                        <SyncIcon onClick={() => handleDownload([id])} />\n                      </IconButton>\n                    </Tooltip>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              </Paper>\n            );\n          })}\n        </List>\n      ) : <Typography variant=\"body1\" component=\"p\">No results were found 😞. Please try again</Typography>}\n    </Container>\n  );\n}\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box'\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlbumIcon from '@material-ui/icons/Album';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nimport TracksList from '../List';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    maxWidth: 400,\n    margin: '0 auto'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n    color: '#ff5252'\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nexport default function SearchBar() {\n  const classes = useStyles();\n  const [track, setTrack] = useState();\n  const [results, setResults] = useState();\n\n  const handleChange = e => {\n    setTrack(e.target.value);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`/api/fetch-songs`, track, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(res => setResults(res.data))\n  }\n\n  return (\n    <>\n      <Container>\n        <Box p={2}>\n          <Paper component=\"form\" className={classes.root} onSubmit={handleSubmit}>\n            <IconButton className={classes.iconButton} aria-label=\"menu\">\n              <AlbumIcon />\n            </IconButton>\n            <InputBase\n              autoFocus\n              className={classes.input}\n              onChange={handleChange}\n              placeholder=\"Search for a song or an artist\"\n              inputProps={{ 'aria-label': 'search song or artist' }}\n            />\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n              <SearchIcon />\n            </IconButton>\n            <Divider className={classes.divider} orientation=\"vertical\" />\n            <IconButton className={classes.iconButton} aria-label=\"directions\">\n              <MusicNoteIcon />\n            </IconButton>\n          </Paper>\n        </Box>\n      </Container>\n      {results && <TracksList tracks={results} />}\n    </>\n  );\n}\n","import React from 'react';\nimport SearchBar from './components/SearchBar';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchBar />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}