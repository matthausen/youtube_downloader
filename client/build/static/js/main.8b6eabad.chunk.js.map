{"version":3,"sources":["components/List/index.jsx","components/SearchBar/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","actions","display","justifyContent","alignItems","button","color","margin","buttonDownload","duration","float","chips","flexWrap","spacing","whitechapelColor","chip","listItem","minWidth","songCard","padding","thumbnail","TracksList","tracks","classes","useState","checked","setChecked","ready","setReady","loading","setLoading","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleDownload","songId","axios","post","headers","Accept","then","res","status","console","log","Container","maxWidth","CircularProgress","className","Typography","variant","component","style","textDecoration","href","Button","startIcon","length","Box","map","song","Chip","avatar","Avatar","alt","src","thumbnails","label","title","onDelete","handleDeleteFromList","onClick","id","videos","List","labelId","Paper","elevation","ListItem","role","undefined","dense","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","primary","ListItemSecondaryAction","Tooltip","aria-label","IconButton","input","marginLeft","flex","iconButton","divider","height","SearchBar","track","setTrack","results","setResults","p","onSubmit","e","preventDefault","data","InputBase","autoFocus","onChange","target","placeholder","type","Divider","orientation","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b6eabad.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Container, Box, Button, Chip, Paper, Avatar, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Typography,\n  Checkbox, IconButton, Tooltip, CircularProgress\n} from '@material-ui/core';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport SyncIcon from '@material-ui/icons/Sync';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  actions: {\n    display: 'flex',\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    backgroundColor: '#ff5252',\n    color: '#ffffff',\n    margin: 4\n  },\n  buttonDownload: {\n    backgroundColor: '#202020',\n    color: '#ff5252',\n    margin: 4\n  },\n  duration: {\n    '& > span': {\n      float: 'right'\n    }\n  },\n  chips: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n  whitechapelColor: {\n    color: '#ff5252'\n  },\n  chip: {\n    backgroundColor: '#ff5252',\n    color: '#ffffff'\n  },\n  listItem: {\n    minWidth: 0\n  },\n  songCard: {\n    margin: 10,\n    padding: 10\n  },\n  thumbnail: {\n    margin: '0 10px'\n  }\n}));\n\nexport default function TracksList({ tracks }) {\n  const classes = useStyles();\n  const [checked, setChecked] = useState([]);\n  const [ready, setReady] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleDownload = songId => {\n    setLoading(true);\n    axios.post(`/api/download-songs`, songId, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        console.log(`The response: ${res}`);\n        setLoading(false);\n        setReady(true);\n      }\n    });\n  }\n\n  const handleDeleteFromList = song => {\n    const currentIndex = checked.indexOf(song);\n    const newChecked = [...checked];\n    newChecked.splice(currentIndex, 1);\n    setChecked(newChecked);\n  }\n\n  const handleClearAll = () => setChecked([]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      {loading && (\n        <>\n          <CircularProgress className={classes.whitechapelColor} />\n          <Typography variant=\"body1\" component=\"p\">Converting to mp3...please wait</Typography>\n        </>\n      )}\n      {ready && <a style={{textDecoration: 'none'}} href={`/api/download-zip`}>\n        <Button\n          variant=\"contained\"\n          className={classes.buttonDownload}\n          startIcon={<GetAppIcon />}\n        >\n          Download as .zip\n        </Button>\n      </a>\n      }\n      {checked && checked.length > 0 ?\n        (\n          <Box>\n            <div className={classes.chips}>\n              {checked.map(song =>\n                <Chip\n                  avatar={<Avatar alt=\"Song\" src={song.thumbnails[0]} />}\n                  label={song.title}\n                  onDelete={() => handleDeleteFromList(song)}\n                  className={classes.chip}\n                />\n              )}\n            </div>\n            <div className={classes.actions}>\n              <Button\n                variant=\"contained\"\n                className={classes.button}\n                onClick={() => handleDownload(checked.map(song => song.id))}\n                startIcon={<SyncIcon />}\n              >\n                Convert to .mp3\n              </Button>\n              <Button\n                variant=\"contained\"\n                className={classes.button}\n                onClick={handleClearAll}\n                startIcon={<ClearAllIcon />}\n              >\n                Clear all\n              </Button>\n            </div>\n          </Box>\n        ) : null\n      }\n      {tracks.videos.length > 0 ? (\n        <List className={classes.root}>\n          {tracks.videos.map(value => {\n\n            const { id, title, thumbnails, duration } = value;\n            const labelId = `checkbox-list-label-${title}`;\n\n            return (\n              <Paper className={classes.songCard} elevation={3}>\n                <ListItem key={id} role={undefined} dense button onClick={handleToggle(value)}>\n                  <ListItemIcon className={classes.listItem}>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checked.indexOf(value) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                      inputProps={{ 'aria-labelledby': labelId }}\n                    />\n                  </ListItemIcon>\n                  <Avatar className={classes.thumbnail} alt=\"thumbnail\" src={thumbnails[0]} />\n                  <ListItemText id={labelId} primary={`${title}`} />\n                  <ListItemText className={classes.duration} id={labelId} primary={`min ${duration}`} />\n                  <ListItemSecondaryAction>\n                    <Tooltip title=\"Convert song to mp3\" aria-label=\"convert-song\">\n                      <IconButton edge=\"end\" aria-label=\"comments\">\n                        <SyncIcon onClick={() => handleDownload([id])} />\n                      </IconButton>\n                    </Tooltip>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              </Paper>\n            );\n          })}\n        </List>\n      ) : <Typography variant=\"body1\" component=\"p\">No results were found 😞. Please try again</Typography>}\n    </Container>\n  );\n}\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlbumIcon from '@material-ui/icons/Album';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nimport TracksList from '../List';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    maxWidth: 400,\n    margin: '0 auto'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n    color: '#ff5252'\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nexport default function SearchBar() {\n  const classes = useStyles();\n  const [track, setTrack] = useState();\n  const [results, setResults] = useState();\n\n  const handleChange = e => {\n    setTrack(e.target.value);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`/api/fetch-songs`, track, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(res => setResults(res.data))\n  }\n\n  return (\n    <>\n      <Container>\n        <Box p={2}>\n          <Paper component=\"form\" className={classes.root} onSubmit={handleSubmit}>\n            <IconButton className={classes.iconButton} aria-label=\"menu\">\n              <AlbumIcon />\n            </IconButton>\n            <InputBase\n              autoFocus\n              className={classes.input}\n              onChange={handleChange}\n              placeholder=\"Search for a song or an artist\"\n              inputProps={{ 'aria-label': 'search song or artist' }}\n            />\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n              <SearchIcon />\n            </IconButton>\n            <Divider className={classes.divider} orientation=\"vertical\" />\n            <IconButton className={classes.iconButton} aria-label=\"directions\">\n              <MusicNoteIcon />\n            </IconButton>\n          </Paper>\n        </Box>\n      </Container>\n      {results && <TracksList tracks={results} />}\n    </>\n  );\n}\n","import React from 'react';\nimport SearchBar from './components/SearchBar';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchBar />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}