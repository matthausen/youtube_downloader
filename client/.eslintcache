[{"/Users/matteofusilli/Apps/youtube-downloader/client/src/reportWebVitals.js":"1","/Users/matteofusilli/Apps/youtube-downloader/client/src/index.js":"2","/Users/matteofusilli/Apps/youtube-downloader/client/src/App.js":"3","/Users/matteofusilli/Apps/youtube-downloader/client/src/components/SearchBar/index.jsx":"4","/Users/matteofusilli/Apps/youtube-downloader/client/src/components/List/index.jsx":"5"},{"size":362,"mtime":1606563161591,"results":"6","hashOfConfig":"7"},{"size":288,"mtime":1606563352611,"results":"8","hashOfConfig":"7"},{"size":181,"mtime":1606586553796,"results":"9","hashOfConfig":"7"},{"size":2439,"mtime":1606932377397,"results":"10","hashOfConfig":"7"},{"size":3517,"mtime":1607028140282,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1m24hm9",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/matteofusilli/Apps/youtube-downloader/client/src/reportWebVitals.js",[],["26","27"],"/Users/matteofusilli/Apps/youtube-downloader/client/src/index.js",[],["28","29"],"/Users/matteofusilli/Apps/youtube-downloader/client/src/App.js",[],["30","31"],"/Users/matteofusilli/Apps/youtube-downloader/client/src/components/SearchBar/index.jsx",[],"/Users/matteofusilli/Apps/youtube-downloader/client/src/components/List/index.jsx",["32","33","34"],"import React from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  chips: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport default function TracksList({ tracks }) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    console.log(checked)\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleDownload = songId => {\n    const API_URL = 'http://127.0.0.1:5000';\n    axios.post(`${API_URL}/api/download-songs`, songId, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    }).then(res => console.log(res));\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box p={6}>\n        {checked && checked.length > 0 ?\n          checked.map(t => {\n            console.log(t);\n            return (\n              <div className={classes.chips}>\n                <Chip\n                  avatar={<Avatar alt=\"Song\" src={t.thumbnails[0]} />}\n                  label={t.title}\n                  onDelete={() => console.log(`You clicked on ${t}`)}\n                  color=\"secondary\"\n                />\n              </div>\n            )\n          }\n          ) : null}\n        <Paper>\n          <List className={classes.root}>\n            {tracks.videos.map((value) => {\n\n              const { id, title, duration, channel, views } = value;\n              const labelId = `checkbox-list-label-${title}`;\n\n              return (\n                <ListItem key={id} role={undefined} dense button onClick={handleToggle(value)}>\n                  <ListItemIcon>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checked.indexOf(value) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                      inputProps={{ 'aria-labelledby': labelId }}\n                    />\n                  </ListItemIcon>\n                  <ListItemText id={labelId} primary={`${title}`} />\n                  <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"comments\">\n                      <GetAppIcon onClick={() => handleDownload(id)} />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              );\n            })}\n          </List>\n        </Paper>\n      </Box>\n    </Container>\n  );\n}\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"35","replacedBy":"39"},{"ruleId":"37","replacedBy":"40"},{"ruleId":"35","replacedBy":"41"},{"ruleId":"37","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":84,"column":34,"nodeType":"45","messageId":"46","endLine":84,"endColumn":42},{"ruleId":"43","severity":1,"message":"47","line":84,"column":44,"nodeType":"45","messageId":"46","endLine":84,"endColumn":51},{"ruleId":"43","severity":1,"message":"48","line":84,"column":53,"nodeType":"45","messageId":"46","endLine":84,"endColumn":58},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],["49"],["50"],["49"],["50"],"no-unused-vars","'duration' is assigned a value but never used.","Identifier","unusedVar","'channel' is assigned a value but never used.","'views' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]